<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo-Next搭建个人博客（安装与部署）]]></title>
    <url>%2F2019%2F08%2F23%2FHexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%AE%89%E8%A3%85%E4%B8%8E%E9%83%A8%E7%BD%B2%EF%BC%89%2F</url>
    <content type="text"><![CDATA[Hexo是一个快速、简洁且高效的静态站点生成框架，它基于Node.js #简介Hexo是一个快速、简洁且高效的静态站点生成框架，它基于Node.js。它有以下特点： ####速度快 Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。 ####支持Markdown Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 ####一键部署 只需一条指令即可部署到Github Pages，或其他网站 ####丰富的插件 Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。 #安装 hexo打开termux按顺序执行以下命令。 此处代码请一行一行的复制#号之前的内容并回车。 123456pkg update #升级包pkg install vim git nodejs openssh #询问之后输入 y 然后回车npm install -g hexo-cli #安装 hexohexo init hexo #新建一个名为 hexo 的文件夹并初始化 hexocd hexo #进入 hexo 文件夹npm install #部署 hexo 至此，hexo 已安装完成，指定的文件夹目录如下。 12345678.├── *_config.yml*├── package.json├── scaffolds├── source| ├── *_drafts*| └── *_posts*└── themes 更多信息可以查看建站|hexo。 继续我们的 hexo hexo new postname #postname 就是文章名称vim source/_posts/postname.md #用 vim 编辑器编辑 mark down 文本，就是你的文章 按i进入编辑模式。编辑完成后，按住音量加点击E模拟 Ees 键，输入ZZ保存并退出，当然也可以直接右滑后长按KEYBOARD调出辅助键盘。 hexo generate #生成静态文件hexo server #启动服务器 以上命令也可以简写为 hexo ghexo s 在浏览器输入http://localhost:4000即可看到你的网站。至此，hexo 搭建完成。 #GitHub设置ssh本来不想的，结果还是一堆图片,以下是一份超详细的GitHub注册教程。 首先需要注册一个 GitHub 账号，地址https://github.com。 *GitHub的signup* 点击Sign up for GitHub *Github注册信息* 填写自己的信息，用户名，邮箱和密码，出现红色的三角/字，就是用不了的意思，需要换一个别的。 *GitHub注册确认* 点击Create an account选择白嫖套餐 *GitHub费用选择* *确认选择* 点击Continue然后去邮箱点击GitHub发来的连接以完成注册 *GitHub页面* 点击Desktop version 点击+号点击点击New repository 在repository name中填写username.github.io，其中，username 是你的用户名，填好后点击Create repository然后发现这个↓ 点击这个 *复制按钮* 或者复制这个按钮前面的一长串内容。 你会得到这样一串字符 git@github.com:username/username.github.io.git 然后 cd hexo #进入 hexo 文件夹vim _config.yml #修改配置文件 把 depoly 部分修改为： deploy: type: git repo: git@github.com:username/username.github.io.git branch: master 保存并退出 请注意缩进，可使用空格或者tab键其实就是上面复制的内容，当然你也可以直接填写repo部分，username 替换为你的用户名。 回到浏览器 点击README新建一个README文件用来激活仓库。随便写一些什么，反正一会就没有了，然后点击Commit new file然后你会看见这个至此，GitHub端工作完成 打开Termux，输入： ssh-keygen -t rsa -C “example@mail.com“ #创建SSH key，引号内替换成你注册GitHub时填的邮箱。 之后会要求输入一次文件名，两次密码，可以直接回车忽略，SSH key创建成功之后，运行： vim .ssh/id_rsa.pub #进入SSH key的文件 复制里面所有内容后打开GitHub，点击头像↓ 点击Settings 点击SSH and GPG keys 点击new SSH key 出现以下内容：Title填自己喜欢的，Key里面粘贴刚才复制的密匙，填好后点Add SSH key 打开Termux，输入： ssh -T git@github.com #检验SSH key 向你确认，输入yes后回车。成功后会显示Hi rd-dafuz！…. 然后 npm install hexo-deployer-git –save #安装git的拓展插件 此处报错时常见的解决方案 npm config set registry https://registry.npm.taobao.org #切换到国内的淘宝源，对，阿里巴巴的那个淘宝！ #开始push hexo generate #生成文件hexo deploy #部署文件 也可以简写为： hexo g -d 最后出现INFO Deploy done：git即为成功,打开https://username.github.io即可查看你的hexo了。 #参考Termux 高级终端安装使用配置教程 | 国光文档 | Hexo及百度、bing、Google （请善用搜索引擎）]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>termux</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在termux使用bilibili挂机脚本]]></title>
    <url>%2F2019%2F08%2F22%2F%E5%9C%A8termux%E4%BD%BF%E7%94%A8bilibili%E6%8C%82%E6%9C%BA%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[点击下载Termux 输入 1pkg up &amp;&amp; pkg in curl &amp;&amp; pkg in php &amp;&amp; pkg in git 安装依赖安装完成之后呢，我们使用git工具把项目拉下来 1git clone https://github.com/lkeme/BiliHelper.git &amp;&amp; cd BiliHelper/conf &amp;&amp; cp user.conf.example user.conf 使用 1cd ~ &amp;&amp; curl -sS https://getcomposer.org/installer | php 安装composer然后通过 123cp composer.phar BiliHelpercd BiliHelperphp composer.phar install 来安装挂机工具安装好后如下图接下来是最后一步！设置用户名和密码输入 1vi conf/user.conf 进行设置最后通过esc和ZZ退出编辑器！输入 1php index.php 就可以运行了！ 更新： 12cd BiliHelpergit pull]]></content>
      <categories>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>termux</tag>
        <tag>教程</tag>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello Word]]></title>
    <url>%2F2019%2F08%2F22%2Fhello-world%2F</url>
    <content type="text"><![CDATA[────────]]></content>
      <categories>
        <category>图</category>
      </categories>
      <tags>
        <tag>自言自语</tag>
        <tag>图</tag>
      </tags>
  </entry>
</search>
