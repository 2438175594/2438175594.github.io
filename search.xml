<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo-Next搭建个人博客（添加网页音乐播放器功能）]]></title>
    <url>%2F2019%2Fhexo-next-da-jian-ge-ren-bo-ke-tian-jia-wang-ye-yin-le-bo-fang-qi-gong-neng%2F</url>
    <content type="text"><![CDATA[为博客添加网页音乐播放器功能 效果图： download点击访问Aplayer源码：GitHub Aplayer。下载到本地，解压后将dist文件夹复制到themes\next\source文件夹下。 music.js新建themes\next\source\dist\music.js文件，添加内容： const ap = new APlayer({ container: document.getElementById(&#39;aplayer&#39;), fixed: true, autoplay: false, audio: [ { name: &quot;Visions&quot;, artist: &#39;Acreix&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;47082.mp3&#39;, cover: &#39;https:&#x2F;&#x2F;p2.music.126.net&#x2F;CDOS3j7zAYrvs6She437yQ==&#x2F;109951163593319450.jpg?param=130y130&#39;, }, { name: &quot;My Soul&quot;, artist: &#39;July&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;50137.mp3&#39;, cover: &#39;https:&#x2F;&#x2F;p2.music.126.net&#x2F;NFl1s5Hl3E37dCaFIDHfNw==&#x2F;727876697598920.jpg?param=130y130&#39;, }, { name: &quot;追光者&quot;, artist: &#39;岑宁儿&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;57711.mp3&#39;, cover: &#39;https:&#x2F;&#x2F;p2.music.126.net&#x2F;ZZAQGWl9mR7g5xCyWWH3Pw==&#x2F;19149094509535913.jpg?param=130y130&#39;, }, { name: &quot;让酒&quot;, artist: &#39;摩登兄弟&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;53762.mp3&#39;, cover: &#39;https:&#x2F;&#x2F;p1.music.126.net&#x2F;JtRFFxXdu4TiKAhK7JT4OQ==&#x2F;109951163830435640.jpg?param=130y130&#39;, }, { name: &quot;哪吒&quot;, artist: &#39;蔡翊昇&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;58327.mp3&#39;, cover: &#39;https:&#x2F;&#x2F;p1.music.126.net&#x2F;Za_wWwp1CRCMAesBbE994A==&#x2F;109951163023780798.jpg?param=130y130&#39;, }, { name: &quot;Apologize&quot;, artist: &#39;Martin Ermen&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;59606.mp3&#39;, cover: &#39;http:&#x2F;&#x2F;p1.music.126.net&#x2F;-_6mcI4VV5IKaiwhUAytbg==&#x2F;1791104441647901.jpg?param=130y130&#39;, }, { name: &quot;River Flows in You&quot;, artist: &#39;Yiruma&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;56482.mp3&#39;, cover: &#39;http:&#x2F;&#x2F;p1.music.126.net&#x2F;8ZRSyI0ZN_4ah8uzsNd1mA==&#x2F;2324367581169008.jpg?param=130y130&#39;, }, { name: &#39;惊蛰&#39;, artist: &#39;音阙诗听&#x2F;王梓钰&#39;, url: &#39;http:&#x2F;&#x2F;www.ytmp3.cn&#x2F;down&#x2F;48755.mp3&#39;, cover: &#39;http:&#x2F;&#x2F;p1.music.126.net&#x2F;5MmXpaP9r88tNzExPGMI8Q==&#x2F;109951163370350985.jpg?param=130y130&#39;, } ] }); 源码中对应的参数解释，这边都有：Aplayer 中文文档audio 对应的便是音频文件，所以音乐播放器需要播放的音乐是需要自己进行相关信息（如歌曲链接、歌词、封面等）的配置。这里放一个mp3音乐外链网站：http://up.mcyt.net/，搜索对应的音乐（网站挂了，我现在用的是OneDrive直链）复制 url 接粘贴到对应的位置上就行了。 注：由于该外链网站没有歌词链接，我这边没有进行配置，所以播放器在播放音乐时点击歌词是没有显示的。 _layout.swig打开themes\next\layout\_layout.swig文件，将 &lt;link rel=&quot;stylesheet&quot; href=&quot;&#x2F;dist&#x2F;APlayer.min.css&quot;&gt; &lt;div id=&quot;aplayer&quot;&gt;&lt;&#x2F;div&gt; &lt;script type=&quot;text&#x2F;javascript&quot; src=&quot;&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt; &lt;script type=&quot;text&#x2F;javascript&quot; src=&quot;&#x2F;dist&#x2F;music.js&quot;&gt;&lt;&#x2F;script&gt; 添加到 &lt;body itemscope ...&gt; 后面就行，即在 &lt;body&gt;&lt;/body&gt; 里面。 重新生成，访问页面，就能看到左下角的音乐播放器了。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>termux</tag>
        <tag>教程</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-Next搭建个人博客（更换主题）]]></title>
    <url>%2F2019%2Fhexo-next-da-jian-ge-ren-bo-ke-geng-huan-zhu-ti%2F</url>
    <content type="text"><![CDATA[前置已经搭建好的Hexo的平台，在本地可以用server打开的也算； 如果没有，请阅读Hexo-Next搭建个人博客（安装与部署） 主题hexo主题，这里有所有的主题，任君选择，找好主题之后，从 Github 上面下载下来，本人使用的是NexT已换成fluid 安装最简单的安装方法是克隆整个存储库： cd hexo git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next 或者，如果您需要任何其他变体，可以查看详细的安装说明。 应用修改站点配置文件_config.yml把theme后改为next # Extensions ## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F; ## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F; theme: next ##把landscape改为next 配置站点配置文件路径~/hexo/_config.yml主题配置文件路径~/hexo/themes/next/_config.yml 站点配置hexo网站相关信息找到site的设置 按下面备注修改相关信息 # Site title: ⌬の空间 #网站标题 subtitle: 为了梦想而努力! #网站副标题 description: #描述,介绍网站的 keywords: 生活,科技 #网站的关键字 author: ZHANGYIJIA #博主姓名 language: zh-CN #语言 zh-CN 是简体中文 timezone: #时区 设置hexo永久链接设置永久链接的目的是为了便于分享和seo优化.这样别人收藏地址后不会出现链接失效 # URL url: https:&#x2F;&#x2F;2438175594.github.io #网站的首页地址 root: &#x2F; #网站的根目录设置 permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title.html # 这种设置的url表现为2018&#x2F;10&#x2F;18&#x2F;hello-world.html 样式 默认链接样式可修改为 (permalink配置只能有一种,关闭某种开头加 #) permalink: :category&#x2F;:title.html #用分类和博客title当做url地址 主题配置配置hexo中的tag,categories菜单默认菜单只开启了首页和归档,hexo所有图标均来自fontawesome menu: #菜单设置为 菜单名: &#x2F;菜单目录 || 菜单图标名字 home: &#x2F; || home about: &#x2F;about&#x2F; || user tags: &#x2F;tags&#x2F; || tags categories: &#x2F;categories&#x2F; || th archives: &#x2F;archives&#x2F; || archive commonweal: &#x2F;404&#x2F; || heartbeat menu_settings: icons: true #显示图标 badges: true #显示统计信息 手动生成hexo菜单对应文件 新菜单开启后是没有对应文件的,所以要手动生成about,tags,categories页面 新建about页面 cd hexo hexo new page about #about就是普通的布局一般用来介绍站点信息和博主信息等 新建一个tags页面 cd hexo hexo new page tags 找到tags文件hexo/source/tags/index.md编辑它 --- title: All tags date: 2018-10-01 13:58:44 #时间随意 type: &quot;tags&quot; #类型一定要为tags --- 新建一个categories页面 cd blog hexo new page categories 找到categories文件hexo/source/categories/index.md编辑它 --- title: 分类 date: 2018-10-15 00:03:57 type: &quot;categories&quot; --- 配置hexo站点的footer信息底部footer可以开关显示hexo版权,theme版权,还有建站时间等个性化配置 footer: since: 2015 #建站开始时间 icon: name: user #设置 建站初始时间和至今时间中间的图标 默认是一个&#39;小人像&#39;更改user为heart可以变成一个&#39;心&#39; color: &quot;#808080&quot; #更改图标的颜色 红色为 &#39;#ff0000&#39; powered: enable: true #是否开启hexo驱动 version: true #是否开启hexo版本号 theme: enable: true #是否开启theme驱动 version: true #是否开启主题版本号 custom_text: Hosted by &lt;a target=&quot;_blank&quot; rel=&quot;external nofollow&quot; href=&quot;https:&#x2F;&#x2F;pages.coding.me&quot;&gt;&lt;b&gt;Coding Pages&lt;&#x2F;b&gt;&lt;&#x2F;a&gt; #这里的底部标识是为了添加coding page服务时的版权声明 打开注释就可以看到底部有一个 hosted by coding pages hexo网站next主题侧边栏宽度,头像信息,头像设置圆形和头像旋转sidebar: position: left #选择pisces 或者 gemini 主题是 可以 选择侧边栏 位置 调整左边或者右边 #position: right width: 300 # muse mist 主题 可以控制侧边栏的宽度 display: post #如果是muse mist 主题 可以选择 侧边栏弹出动作 post 是 只在内容页弹出 #display: always #全局弹出 #display: hide #全局隐藏侧边栏 右下角有角标唤出 #display: remove #移除侧边栏 avatar: url: &#x2F;images&#x2F;avatar.gif #设置头像资源的位置 rounded: false #开启圆形头像 opacity: 1 #不透明的比例 0 就是完全透明 rotated: false #开启旋转 hexo中next主题的社交信息和友链配置social: #和菜单设置格式一样 社交名字: 社交url || 社交图标 ,图标信息还是[fontawesome](https:&#x2F;&#x2F;fontawesome.com&#x2F;v4.7.0&#x2F;icons) GitHub: https:&#x2F;&#x2F;github.com&#x2F;yourname || github E-Mail: mailto:yourname@gmail.com || envelope Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || google social_icons: nable: true #显示社交图标 icons_only: false #只显示图标的开关 # Blog rolls links_icon: link #友链的图标 参考上文 links_title: Links #友链的title 比如你可以更改为 友情链接 links_layout: block #友链摆放的样式,按块 一行一个 #links_layout: inline #按线摆放,一行很多个 切记 同时只能一种样式 links: Title: http:&#x2F;&#x2F;example.com&#x2F; #友链的地址]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>termux</tag>
        <tag>教程</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-Next搭建个人博客（安装与部署）]]></title>
    <url>%2F2019%2Fhexo-next-da-jian-ge-ren-bo-ke-an-zhuang-yu-bu-shu%2F</url>
    <content type="text"><![CDATA[Hexo是一个快速、简洁且高效的静态站点生成框架，它基于Node.js 简介Hexo是一个快速、简洁且高效的静态站点生成框架，它基于Node.js。 特点： 速度快Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。 支持MarkdownHexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 一键部署只需一条指令即可部署到Github或其他网站 丰富的插件Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。 安装 hexo打开Termux按顺序执行以下命令。 此处代码请一行一行的复制#号之前的内容并回车。 pkg update #升级包 pkg install vim git nodejs openssh #询问之后输入 y 然后回车 npm install -g hexo-cli #安装 hexo hexo init hexo #新建一个名为 hexo 的文件夹并初始化 hexo cd hexo #进入 hexo 文件夹 npm install #部署 hexo 至此，hexo 已安装完成，指定的文件夹目录如下。 . ├── _config.yml ├── package.json ├── scaffolds ├── source | ├── _drafts | └── _posts └── themes 更多信息可以查看建站|hexo。 继续我们的 hexo hexo new postname #postname 就是文章名称 vim source&#x2F;_posts&#x2F;postname.md #用 vim 编辑器编辑 mark down 文本，就是你的文章 按i进入编辑模式。编辑完成后，按住音量加点击E模拟 Ees 键，输入ZZ保存并退出，当然也可以直接右滑后长按KEYBOARD调出辅助键盘。 hexo generate #生成静态文件 hexo server #启动服务器 以上命令也可以简写为 hexo g hexo s 在浏览器输入http://localhost:4000 即可看到你的网站。至此，hexo 搭建完成。 GitHub设置ssh本来不想的，结果还是一堆图片,以下是一份超详细的GitHub注册教程。 注册首先需要注册一个 GitHub 账号，地址https://github.com。 GitHub的signup 点击Sign up for GitHub Github注册信息 填写自己的信息，用户名，邮箱和密码，出现红色的三角/字，就是用不了的意思，需要换一个别的。 GitHub注册确认 点击Create an account选择白嫖套餐 GitHub费用选择 确认选择 点击Continue然后去邮箱点击GitHub发来的连接以完成注册 GitHub页面 点击Desktop version点击+号点击点击New repository在repository name中填写username.github.io，其中，username 是你的用户名，填好后点击Create repository然后发现这个↓点击这个 复制按钮 或者复制这个按钮前面的一长串内容。 你会得到这样一串字符 git@github.com:username&#x2F;username.github.io.git 然后 cd hexo #进入 hexo 文件夹 vim _config.yml #修改配置文件 把 depoly 部分修改为： deploy: type: git repo: git@github.com:username&#x2F;username.github.io.git branch: master 保存并退出 请注意缩进，可使用`空格`或者`tab键` 其实就是上面复制的内容，当然你也可以直接填写repo部分，username 替换为你的用户名。 激活仓库回到浏览器点击README新建一个README文件用来激活仓库。随便写一些什么，反正一会就没有了，然后点击Commit new file然后你会看见这个至此，GitHub端工作完成 设置SSH key打开Termux，输入： ssh-keygen -t rsa -C &quot;example@mail.com&quot; #创建SSH key，引号内替换成你注册GitHub时填的邮箱。 之后会要求输入一次文件名，两次密码，可以直接回车忽略，SSH key创建成功之后，运行： vim .ssh&#x2F;id_rsa.pub #进入SSH key的文件 复制里面所有内容后打开GitHub，点击头像↓ 点击Settings 点击SSH and GPG keys 点击new SSH key 出现以下内容：Title填自己喜欢的，Key里面粘贴刚才复制的密匙，填好后点Add SSH key 打开Termux，输入： ssh -T git@github.com #检验SSH key 向你确认，输入yes后回车。成功后会显示Hi rd-dafuz！…. 然后 npm install hexo-deployer-git --save #安装git的拓展插件 此处报错时常见的解决方案 npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org #切换到国内的淘宝源，对，阿里巴巴的那个淘宝！ 开始pushhexo generate #生成文件 hexo deploy #部署文件 也可以简写为： hexo g -d 最后出现INFO Deploy done：git即为成功,打开https://username.github.io即可查看你的hexo了。 参考Termux 高级终端安装使用配置教程 | 国光文档 | Hexo及百度、bing、Google （请善用搜索引擎）]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>termux</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Termux美化]]></title>
    <url>%2F2019%2Ftermux-mei-hua%2F</url>
    <content type="text"><![CDATA[■软件名称:Termux ■官方简介:高级终端Termux组合了强大的终端模拟 和拓展Linux包收集支持。享受bash和zsh。使用nano和vim编辑文件。通过ssh访问服务器。使用gcc和clang编译代码。使用python控制台来作为口袋计算器。使用git和subversion检查项目。使用frotz运行基于文本的游戏。 【下载地址】Termux 【官方介绍】(有删改) 让你的 Termux 变的五颜六色～ 为Termux添加oh my zsh终端环境以及zsh-syntax-highlighting，设置色彩样式（大部分来自Gogh）和Powerline字体（来自powerline/fonts）。oh-my-zsh主题默认为agnoster，颜色样式默认为Tango，字体默认为Ubuntu。 【注意】此 Repo 使用 Termux 官方源，在中国大陆可能需要将 Termux 应用添加到代理列表。 第一步更新apt(遇到y/n输入y) apt update &amp;&amp; apt upgrade 第二步安装curl环境 apt install curl 第三步安装脚本 sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;github.com&#x2F;Cabbagec&#x2F;termux-ohmyzsh&#x2F;raw&#x2F;master&#x2F;install.sh)&quot; 第四步跟着ohmyzsh设置(没有英语基础的可以一个个试)第一步是设置色彩样式第二步是设置字体(需重启termux后生效) 第二次打开时若要更换色彩样式输入 ~&#x2F;.termux&#x2F;colors.sh 更换字体输入 ~&#x2F;.termux&#x2F;fonts.sh]]></content>
      <categories>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在termux使用bilibili挂机脚本]]></title>
    <url>%2F2019%2Fzai-termux-shi-yong-bilibili-gua-ji-jiao-ben%2F</url>
    <content type="text"><![CDATA[转载自酷安 打开Termux输入 pkg up &amp;&amp; pkg in curl &amp;&amp; pkg in php &amp;&amp; pkg in git 安装依赖安装完成之后呢，我们使用git工具把项目拉下来 git clone https:&#x2F;&#x2F;github.com&#x2F;lkeme&#x2F;BiliHelper.git &amp;&amp; cd BiliHelper&#x2F;conf &amp;&amp; cp user.conf.example user.conf 使用 cd ~ &amp;&amp; curl -sS https:&#x2F;&#x2F;getcomposer.org&#x2F;installer | php 安装composer然后通过 cp composer.phar BiliHelper cd BiliHelper php composer.phar install 来安装挂机工具安装好后如下图接下来是最后一步！设置用户名和密码输入 vi conf&#x2F;user.conf 进行设置最后通过esc和ZZ退出编辑器！输入 php index.php 就可以运行了！ 更新： cd BiliHelper git pull]]></content>
      <categories>
        <category>Termux</category>
      </categories>
      <tags>
        <tag>termux</tag>
        <tag>教程</tag>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello Word]]></title>
    <url>%2F2019%2Fhello-world%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>图</category>
      </categories>
      <tags>
        <tag>自言自语</tag>
        <tag>图</tag>
      </tags>
  </entry>
</search>
